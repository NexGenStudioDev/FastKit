import * as fs from 'fs';
import * as path from 'path';

/**
 * Builds the demo content for .env with comments
 */
function buildDemoEnv(): string {
  const lines: string[] = [];

  lines.push('# ===============================================================');
  lines.push('# FastKit Demo Environment File');
  lines.push('# This file was automatically generated by FastKit.');
  lines.push('#');
  lines.push('# âž¤ GitHub: https://github.com/abhishek-nexgen-dev');
  lines.push('# âž¤ Created on: ' + new Date().toISOString());
  lines.push('#');
  lines.push('# This file contains example environment variables for development.');
  lines.push('# Please modify these values as needed for your local setup.');
  lines.push('');

  // Server
  lines.push('# ----------------------------');
  lines.push('# Server Configuration');
  lines.push('# ----------------------------');
  lines.push('PORT=3000');
  lines.push('HOST=localhost');
  lines.push('NODE_ENV=development');
  lines.push('ENVIRONMENT=development');
  lines.push('');

  // Database
  lines.push('# ----------------------------');
  lines.push('# Database Configuration');
  lines.push('# ----------------------------');
  lines.push('DATABASE_TYPE=mongodb');
  lines.push('DATABASE_URL=mongodb://localhost:27017/fastkit');
  lines.push('DATABASE_HOST=localhost');
  lines.push('DATABASE_PORT=27017');
  lines.push('DATABASE_USERNAME=your-db-username');
  lines.push('DATABASE_PASSWORD=your-db-password');
  lines.push('DATABASE_NAME=fastkit');
  lines.push('');

  // JWT
  lines.push('# ----------------------------');
  lines.push('# JWT Authentication');
  lines.push('# ----------------------------');
  lines.push('JWT_SECRET=your-super-secret-jwt-key-change-this-in-production');
  lines.push('JWT_EXPIRES_IN=24h');
  lines.push('JWT_ALGORITHM=HS256');
  lines.push('');

  // CORS
  lines.push('# ----------------------------');
  lines.push('# CORS Settings');
  lines.push('# ----------------------------');
  lines.push('CORS_ORIGIN=true');
  lines.push('CORS_METHODS=GET,POST,PUT,DELETE,PATCH');
  lines.push('CORS_ALLOWED_HEADERS=Content-Type,Authorization');
  lines.push('CORS_CREDENTIALS=true');
  lines.push('');

  // Security
  lines.push('# ----------------------------');
  lines.push('# Security Settings');
  lines.push('# ----------------------------');
  lines.push('RATE_LIMIT_WINDOW_MS=900000');
  lines.push('RATE_LIMIT_MAX=100');
  lines.push('SECURITY_HELMET=true');
  lines.push('SECURITY_COMPRESSION=true');
  lines.push('SECURITY_MORGAN=true');
  lines.push('');

  // Email
  lines.push('# ----------------------------');
  lines.push('# Email Settings');
  lines.push('# ----------------------------');
  lines.push('EMAIL_SERVICE=gmail');
  lines.push('EMAIL_HOST=smtp.gmail.com');
  lines.push('EMAIL_PORT=587');
  lines.push('EMAIL_SECURE=false');
  lines.push('EMAIL_USERNAME=your-email@gmail.com');
  lines.push('EMAIL_PASSWORD=your-app-password');
  lines.push('EMAIL_FROM=noreply@yourapp.com');
  lines.push('');

  // Custom
  lines.push('# ----------------------------');
  lines.push('# Custom Variables');
  lines.push('# ----------------------------');
  lines.push('APP_NAME=FastKit App');
  lines.push('API_VERSION=v1');
  lines.push('MAX_FILE_SIZE=10MB');
  lines.push('');

  return lines.join('\n');
}

/**
 * Ensure `.env` exists, create with demo content if missing,
 * then generate `.env.production` and `.env.test`.
 */
export function setupEnvFiles(): void {
  const cwd = process.cwd();
  const baseEnv = path.join(cwd, '.env');
  const prodEnv = path.join(cwd, 'Environment', '.env.production');
  const testEnv = path.join(cwd, 'Environment', '.env.test');

  // Step 1: create .env if it doesn't exist
  if (!fs.existsSync(baseEnv)) {
    const demoContent = buildDemoEnv();
    fs.writeFileSync(baseEnv, demoContent, { encoding: 'utf8' });
    console.log(`ðŸŒ± Created demo .env in project root`);
  }

  // Step 2: read .env
  const content = fs.readFileSync(baseEnv, 'utf8');

  // Step 3: generate variants
  fs.writeFileSync(prodEnv, content, { encoding: 'utf8' });
  fs.writeFileSync(testEnv, content, { encoding: 'utf8' });
  console.log(`âœ… Generated .env.production and .env.test`);
}
